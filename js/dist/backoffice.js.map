{"version":3,"file":"backoffice.js","mappings":"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","sources":["webpack://@flamarkt/phone-number/webpack/bootstrap","webpack://@flamarkt/phone-number/webpack/runtime/compat get default export","webpack://@flamarkt/phone-number/webpack/runtime/define property getters","webpack://@flamarkt/phone-number/webpack/runtime/hasOwnProperty shorthand","webpack://@flamarkt/phone-number/webpack/runtime/make namespace object","webpack://@flamarkt/phone-number/external root \"((flarum.extensions['flamarkt-backoffice']||{})['backoffice']||{})['app']\"","webpack://@flamarkt/phone-number/external root \"flarum.core.compat['common/extenders']\"","webpack://@flamarkt/phone-number/external root \"flarum.core.compat['common/models/User']\"","webpack://@flamarkt/phone-number/./src/common/extendModels.ts","webpack://@flamarkt/phone-number/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@flamarkt/phone-number/external root \"flarum.core.compat['common/app']\"","webpack://@flamarkt/phone-number/external root \"flarum.core.compat['common/Component']\"","webpack://@flamarkt/phone-number/external root \"flarum.core.compat['common/components/Select']\"","webpack://@flamarkt/phone-number/external root \"flarum.core.compat['common/utils/extractText']\"","webpack://@flamarkt/phone-number/./src/common/components/PhoneNumberInput.ts","webpack://@flamarkt/phone-number/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@flamarkt/phone-number/./src/common/compat.ts","webpack://@flamarkt/phone-number/external root \"flarum.core.compat['common/extend']\"","webpack://@flamarkt/phone-number/external root \"((flarum.extensions['flamarkt-backoffice']||{})['backoffice']||{})['pages/UserShowPage']\"","webpack://@flamarkt/phone-number/./src/backoffice/index.ts","webpack://@flamarkt/phone-number/./src/backoffice/addFieldToProductShowPage.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = ((flarum.extensions['flamarkt-backoffice']||{})['backoffice']||{})['app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extenders'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/models/User'];","import Extend from 'flarum/common/extenders';\nimport User from 'flarum/common/models/User';\n\nexport const extend = [\n    new Extend.Model(User)\n        .attribute('flamarktPhoneNumber'),\n];\n","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Component'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Select'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/extractText'];","import app from 'flarum/common/app';\nimport Component, {ComponentAttrs} from 'flarum/common/Component';\nimport Select from 'flarum/common/components/Select';\nimport User from 'flarum/common/models/User';\nimport extractText from 'flarum/common/utils/extractText';\n\nexport interface PhoneNumberInputAttrs extends ComponentAttrs {\n    id?: string\n    value: string\n    onchange?: (value: string) => void\n    readonly?: boolean\n    disabled?: boolean\n    required?: boolean\n    user?: User\n}\n\nexport default class PhoneNumberInput extends Component<PhoneNumberInputAttrs> {\n    customMode: boolean = false\n\n    oninit(vnode: any) {\n        super.oninit(vnode);\n\n        const countryCodes = (app.forum.attribute<[string, string, number][]>('flamarktPhoneNumberCountryCodes') || []);\n        const value = this.attrs.value || '';\n\n        this.customMode = !!value && !countryCodes.some(cc => value.indexOf('+' + cc[2]) === 0);\n    }\n\n    view() {\n        const countryCodes = (app.forum.attribute<[string, string, number][]>('flamarktPhoneNumberCountryCodes') || []);\n\n        const value = this.attrs.value || '';\n        const options: any = {};\n        let selectedPrefix: string | null = null;\n        let selectedRegion: string | null = null;\n\n        countryCodes.forEach((countryCode, index) => {\n            const prefix = '+' + countryCode[2];\n            options[countryCode[0]] = countryCode[1] + ' ' + prefix;\n\n            // If the current value contains this prefix\n            // Or if no value is set mark the first entry as selected\n            if (!this.customMode && (value.indexOf(prefix) === 0 || (!value && index === 0))) {\n                selectedPrefix = prefix;\n                selectedRegion = countryCode[0];\n            }\n        });\n\n        if (app.forum.attribute('flamarktPhoneNumberUseAnyPrefix') || this.customMode) {\n            options.custom = extractText(app.translator.trans('flamarkt-phone-number.lib.field.custom'));\n        }\n\n        const valueWithoutPrefix = value.replace(selectedPrefix || '?' /* don't match anything if there was no prefix selected */, '');\n\n        return m('.FlamarktPhoneNumberInput', [\n            countryCodes.length > 0 ? Select.component({\n                className: 'FlamarktPhoneNumberInput-select',\n                options,\n                value: selectedRegion || 'custom',\n                onchange: (region: string) => {\n                    if (region === 'custom') {\n                        this.customMode = true;\n\n                        // If the value only contained a prefix (nothing visible in the text input)\n                        // clear the value since it's probably unwanted from browsing through the select options\n                        if (value === selectedPrefix) {\n                            this.attrs.onchange?.('');\n                        }\n\n                        return;\n                    }\n\n                    this.customMode = false;\n\n                    const newPrefix = ('+' + countryCodes.find(cc => cc[0] === region)![2]);\n\n                    // Remove any \"+\" in the input to make it pretty obvious that any value typed in custom mode will not be valid in explicit prefix mode\n                    this.attrs.onchange?.(newPrefix + valueWithoutPrefix.replace('+', ''));\n                },\n                readonly: this.attrs.readonly,\n                disabled: this.attrs.disabled,\n            }) : null,\n            m('input.FlamarktPhoneNumberInput-text.FormControl', {\n                id: this.attrs.id,\n                type: 'text',\n                value: valueWithoutPrefix,\n                onchange: (event: InputEvent) => {\n                    const newValue = (event.target as HTMLInputElement).value;\n\n                    // If the user manually typed a number with an international prefix, and it's a valid pre-selected prefix\n                    // We will exit custom mode and/or change the prefix in the dropdown\n                    // Likewise if the number isn't valid we will switch to custom mode (even if custom is not allowed, validation will take care of that)\n                    // Warning, this code will need refactoring if we use oninput instead of onchange because it could match on something partially typed\n                    if (newValue.indexOf('+') === 0) {\n                        // TODO: when enabling custom mode from here, the Select doesn't seem to refresh the active item\n                        this.customMode = !countryCodes.some(cc => newValue.indexOf(cc[2] + '') === 1);\n                        this.attrs.onchange?.(newValue);\n                        return;\n                    }\n\n                    this.attrs.onchange?.((selectedPrefix || '') + newValue);\n                },\n                readonly: this.attrs.readonly,\n                disabled: this.attrs.disabled,\n                required: this.attrs.required,\n            }),\n        ]);\n    }\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import PhoneNumberInput from './components/PhoneNumberInput';\n\nexport const common = {\n    'components/PhoneNumberInput': PhoneNumberInput,\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = ((flarum.extensions['flamarkt-backoffice']||{})['backoffice']||{})['pages/UserShowPage'];","import app from 'flamarkt/backoffice/backoffice/app';\nimport {extend} from '../common/extendModels';\nimport {common} from '../common/compat';\nimport addFieldToProductShowPage from './addFieldToProductShowPage';\n\nexport {\n    extend,\n    common,\n};\n\napp.initializers.add('flamarkt-phone-number', () => {\n    app.extensionData.for('flamarkt-phone-number')\n        .registerSetting({\n            setting: 'flamarkt-phone-number.searchable',\n            type: 'switch',\n            label: app.translator.trans('flamarkt-phone-number.backoffice.settings.searchable'),\n            help: app.translator.trans('flamarkt-phone-number.backoffice.settings.searchableHelp'),\n        })\n        .registerSetting({\n            setting: 'flamarkt-phone-number.required',\n            type: 'switch',\n            label: app.translator.trans('flamarkt-phone-number.backoffice.settings.required'),\n        })\n        .registerSetting({\n            setting: 'flamarkt-phone-number.selectedPrefixes',\n            type: 'text',\n            label: app.translator.trans('flamarkt-phone-number.backoffice.settings.selectedPrefixes'),\n            help: app.translator.trans('flamarkt-phone-number.backoffice.settings.selectedPrefixesHelp'),\n        })\n        .registerPermission({\n            icon: 'fas fa-mobile-alt',\n            label: app.translator.trans('flamarkt-phone-number.backoffice.permissions.editOwn'),\n            permission: 'flamarkt-phone-number.editOwn',\n            allowGuest: true,\n        }, 'reply')\n        .registerPermission({\n            icon: 'fas fa-mobile-alt',\n            label: app.translator.trans('flamarkt-phone-number.backoffice.permissions.useAnyPrefix'),\n            permission: 'flamarkt-phone-number.useAnyPrefix',\n            allowGuest: true,\n        }, 'reply');\n\n    addFieldToProductShowPage();\n});\n","import app from 'flamarkt/backoffice/backoffice/app';\nimport {extend} from 'flarum/common/extend';\nimport UserShowPage from 'flamarkt/backoffice/backoffice/pages/UserShowPage';\nimport PhoneNumberInput from '../common/components/PhoneNumberInput';\n\nexport default function () {\n    extend(UserShowPage.prototype, 'oninit', function () {\n        this.phoneNumber = '';\n    });\n\n    extend(UserShowPage.prototype, 'show', function (returnValue, user) {\n        this.phoneNumber = user.attribute('flamarktPhoneNumber') || '';\n    });\n\n    extend(UserShowPage.prototype, 'fields', function (fields) {\n        fields.add('categories', m('.Form-group', [\n            m('label', {\n                for: 'user-edit-phone-number',\n            }, app.translator.trans('flamarkt-phone-number.lib.field.label')),\n            PhoneNumberInput.component({\n                id: 'user-edit-phone-number',\n                value: this.phoneNumber,\n                onchange: (value: string) => {\n                    this.phoneNumber = value;\n                    this.dirty = true;\n                },\n                disabled: this.saving,\n            }),\n        ]));\n    });\n\n    extend(UserShowPage.prototype, 'data', function (data) {\n        data.flamarktPhoneNumber = this.phoneNumber;\n    });\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","extensions","core","compat","extend","Extend","User","attribute","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","PhoneNumberInput","_Component","subClass","superClass","_this","_len","arguments","length","args","Array","_key","apply","concat","customMode","create","constructor","_proto","oninit","vnode","countryCodes","app","this","attrs","some","cc","indexOf","view","_this2","options","selectedPrefix","selectedRegion","forEach","countryCode","index","prefix","custom","extractText","valueWithoutPrefix","replace","m","Select","className","onchange","region","newPrefix","find","readonly","disabled","id","type","event","newValue","target","required","Component","common","registerSetting","setting","label","help","registerPermission","icon","permission","allowGuest","UserShowPage","phoneNumber","returnValue","user","fields","add","for","component","dirty","saving","data","flamarktPhoneNumber"],"sourceRoot":""}